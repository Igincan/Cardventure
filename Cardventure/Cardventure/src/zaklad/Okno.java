/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package zaklad;

import java.awt.Color;
import java.util.Random;
import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.SwingConstants;
import javax.swing.Timer;
import karty.Karta;
import levely.Level;

/**
 * Trieda Okno slúži na vykreslovanie hry a zároveň na jej vstup. Nachádza sa tu aj trochu logiky hry.
 * @author Iginčan
 */
public class Okno extends javax.swing.JFrame {

    /**
     * Vytvára nové Okno.
     */
    public Okno() {
        this.initComponents();
        this.mojaInicializaciaJFrameObjektov();
        this.level = null;
    }
    
    private void mojaInicializaciaJFrameObjektov() {
        this.jEndButton.setOpaque(true);
        this.jOponentBalicekLabel.setOpaque(true);
        this.jOponentKarta1Button.setOpaque(true);
        this.jOponentKarta2Button.setOpaque(true);
        this.jOponentKarta3Button.setOpaque(true);
        this.jPouzivanaKartaButton.setOpaque(true);
        this.jPouzivatelBalicekLabel.setOpaque(true);
        this.jPouzivatelKarta1Button.setOpaque(true);
        this.jPouzivatelKarta2Button.setOpaque(true);
        this.jPouzivatelKarta3Button.setOpaque(true);
        this.jZivotPouzivatelaLabel.setOpaque(true);
        this.jZivotOponentaLabel.setOpaque(true);
        this.jZivotPouzivatelaLabel.setHorizontalTextPosition(JLabel.CENTER);
        this.jZivotPouzivatelaLabel.setVerticalTextPosition(JLabel.CENTER);
        this.jZivotOponentaLabel.setHorizontalTextPosition(JLabel.CENTER);
        this.jZivotOponentaLabel.setVerticalTextPosition(JLabel.CENTER);
        this.jObranaPouzivatelaLabel.setHorizontalTextPosition(JLabel.CENTER);
        this.jObranaPouzivatelaLabel.setVerticalTextPosition(JLabel.CENTER);
        this.jObranaOponentaLabel.setHorizontalTextPosition(JLabel.CENTER);
        this.jObranaOponentaLabel.setVerticalTextPosition(JLabel.CENTER);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPouzivatelKarta1Button = new javax.swing.JButton();
        jPouzivatelKarta2Button = new javax.swing.JButton();
        jPouzivatelKarta3Button = new javax.swing.JButton();
        jPouzivatelBalicekLabel = new javax.swing.JLabel();
        jOponentBalicekLabel = new javax.swing.JLabel();
        jOponentKarta1Button = new javax.swing.JButton();
        jOponentKarta2Button = new javax.swing.JButton();
        jOponentKarta3Button = new javax.swing.JButton();
        jEndButton = new javax.swing.JButton();
        jPouzivanaKartaButton = new javax.swing.JButton();
        jZivotPouzivatelaLabel = new javax.swing.JLabel();
        jZivotOponentaLabel = new javax.swing.JLabel();
        jObranaPouzivatelaLabel = new javax.swing.JLabel();
        jObranaOponentaLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Cardventure: Made of buttons!!!");

        jPouzivatelKarta1Button.setText("KARTA 1");
        jPouzivatelKarta1Button.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jPouzivatelKarta1Button.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        jPouzivatelKarta1Button.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        jPouzivatelKarta1Button.setVerticalTextPosition(javax.swing.SwingConstants.TOP);
        jPouzivatelKarta1Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jPouzivatelKarta1ButtonActionPerformed(evt);
            }
        });

        jPouzivatelKarta2Button.setText("KARTA 2");
        jPouzivatelKarta2Button.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jPouzivatelKarta2Button.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        jPouzivatelKarta2Button.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        jPouzivatelKarta2Button.setVerticalTextPosition(javax.swing.SwingConstants.TOP);
        jPouzivatelKarta2Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jPouzivatelKarta2ButtonActionPerformed(evt);
            }
        });

        jPouzivatelKarta3Button.setText("KARTA 3");
        jPouzivatelKarta3Button.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jPouzivatelKarta3Button.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        jPouzivatelKarta3Button.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        jPouzivatelKarta3Button.setVerticalTextPosition(javax.swing.SwingConstants.TOP);
        jPouzivatelKarta3Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jPouzivatelKarta3ButtonActionPerformed(evt);
            }
        });

        jPouzivatelBalicekLabel.setBackground(java.awt.Color.white);
        jPouzivatelBalicekLabel.setForeground(java.awt.Color.black);
        jPouzivatelBalicekLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jPouzivatelBalicekLabel.setText("0/0");

        jOponentBalicekLabel.setBackground(java.awt.Color.white);
        jOponentBalicekLabel.setForeground(java.awt.Color.black);
        jOponentBalicekLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jOponentBalicekLabel.setText("0/0");

        jOponentKarta1Button.setText("KARTA 1");
        jOponentKarta1Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jOponentKarta1ButtonActionPerformed(evt);
            }
        });

        jOponentKarta2Button.setText("KARTA 2");

        jOponentKarta3Button.setText("KARTA 3");

        jEndButton.setText("UKONCIT TAH");
        jEndButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jEndButtonActionPerformed(evt);
            }
        });

        jPouzivanaKartaButton.setText("KARTA");
        jPouzivanaKartaButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jPouzivanaKartaButtonActionPerformed(evt);
            }
        });

        jZivotPouzivatelaLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jZivotPouzivatelaLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/obrazky/srdce.png"))); // NOI18N

        jZivotOponentaLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jZivotOponentaLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/obrazky/srdce.png"))); // NOI18N

        jObranaPouzivatelaLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/obrazky/stit.png"))); // NOI18N

        jObranaOponentaLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/obrazky/stit.png"))); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPouzivatelKarta1Button, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jOponentKarta1Button, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(50, 50, 50)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPouzivatelKarta2Button, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jOponentKarta2Button, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(50, 50, 50)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPouzivatelKarta3Button, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jOponentKarta3Button, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 65, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jObranaOponentaLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jZivotOponentaLabel))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jObranaPouzivatelaLabel)
                                .addGap(46, 46, 46)
                                .addComponent(jZivotPouzivatelaLabel)))
                        .addGap(45, 45, 45))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPouzivanaKartaButton, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(111, 111, 111)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jOponentBalicekLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPouzivatelBalicekLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(jEndButton, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(40, 40, 40))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jOponentBalicekLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jOponentKarta1Button, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jOponentKarta2Button, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jOponentKarta3Button, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jObranaOponentaLabel))
                    .addComponent(jZivotOponentaLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 29, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPouzivanaKartaButton, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jEndButton, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(48, 48, 48)))
                        .addGap(20, 20, 20)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jPouzivatelBalicekLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jPouzivatelKarta1Button, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jPouzivatelKarta2Button, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jObranaPouzivatelaLabel)
                                .addComponent(jZivotPouzivatelaLabel))))
                    .addComponent(jPouzivatelKarta3Button, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(40, 40, 40))
        );

        getAccessibleContext().setAccessibleDescription("");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    // <editor-fold defaultstate="collapsed" desc="jFrame eventy">
    private void jPouzivatelKarta1ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jPouzivatelKarta1ButtonActionPerformed
        this.nastavPouzivanuKartu(1);
        this.vykresliPouzivanuKartu();
    }//GEN-LAST:event_jPouzivatelKarta1ButtonActionPerformed

    private void jOponentKarta1ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jOponentKarta1ButtonActionPerformed
        //
    }//GEN-LAST:event_jOponentKarta1ButtonActionPerformed

    private void jPouzivatelKarta2ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jPouzivatelKarta2ButtonActionPerformed
        this.nastavPouzivanuKartu(2);
        this.vykresliPouzivanuKartu();
    }//GEN-LAST:event_jPouzivatelKarta2ButtonActionPerformed

    private void jPouzivatelKarta3ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jPouzivatelKarta3ButtonActionPerformed
        this.nastavPouzivanuKartu(3);
        this.vykresliPouzivanuKartu();
    }//GEN-LAST:event_jPouzivatelKarta3ButtonActionPerformed

    private void jEndButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jEndButtonActionPerformed
        this.level.setPouzivanaKarta(null);
        this.vykresli();
        this.zamkniPouzivateloveButtony();
        Timer uberJedenZivot = new Timer(1000, (e) -> {
            Hrac pouzivatel = this.level.getPouzivatel();
            Random rd = new Random();
            switch (rd.nextInt(10)) {
                case 0:
                    pouzivatel.odoberZivot(1);
                    break;
                case 1:
                    pouzivatel.odoberZivot(1);
                    break;
                case 2:
                    pouzivatel.odoberZivot(1);
                    break;
                case 3:
                    pouzivatel.odoberZivot(2);
                    break;
                case 4:
                    pouzivatel.pridajObranu(1);
                    break;
                case 5:
                    pouzivatel.pridajObranu(2);
                    break;
                case 6:
                    pouzivatel.pridajObranu(3);
                    break;
                case 7:
                    pouzivatel.odoberZivot(1);
                    break;
                case 8:
                    pouzivatel.odoberZivot(2);
                    break;
                case 9:
                    pouzivatel.odoberZivot(3);
                    break;
            }
            this.level.getPouzivatel().odoberZivot(rd.nextInt(3) + 1);
            this.vykresli();
            this.zamkniPouzivateloveButtony();
        });
        Timer inicializujPouzivatela = new Timer(2000, (e) -> {
            this.level.getPouzivatel().vytiahniNahodnuKartuZBalika();
            this.odomkniPouzivateloveButtony();
            this.vykresli();
        });
        inicializujPouzivatela.setRepeats(false);
        uberJedenZivot.setRepeats(false);
        uberJedenZivot.start();
        inicializujPouzivatela.start();
    }//GEN-LAST:event_jEndButtonActionPerformed

    private void jPouzivanaKartaButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jPouzivanaKartaButtonActionPerformed
        this.level.zahrajPouzivanuKartu(this.level.getPouzivatel());
        this.vykresli();
    }//GEN-LAST:event_jPouzivanaKartaButtonActionPerformed
    // </editor-fold>
    
    // <editor-fold defaultstate="collapsed" desc="MyCode">
    private static Okno okno;
    
    private Level level;
    
    /**
     * Vracia inštanciu Okna.
     * @return inštancia Okna
     */
    public static Okno getOkno() {
        return okno;
    }
    
    /**
     * Priradí level kam bude posielať vstup. A príjmať výstup.
     * @param level daný level
     */
    public void priradLevel(Level level) {
        this.level = level;
    }
    
    /**
     * Vykreslí celé okno podľa informácii v leveli.
     */
    public void vykresli() {
        this.vykresliPouzivatela();
        this.vykresliOponenta();
        this.vykresliPouzivanuKartu();
    }
    
    private void vykresliPouzivanuKartu() {
        Karta karta = this.level.getPouzivanaKarta();
        if (karta == null) {
            this.jPouzivanaKartaButton.setOpaque(true);
            this.jPouzivanaKartaButton.setHorizontalAlignment(SwingConstants.CENTER);
            this.jPouzivanaKartaButton.setText("POUŽIŤ");
            this.jPouzivanaKartaButton.setBackground(Color.DARK_GRAY);
            this.jPouzivanaKartaButton.setEnabled(false);
        } else {
            this.jPouzivanaKartaButton.setOpaque(true);
            this.jPouzivanaKartaButton.setHorizontalAlignment(SwingConstants.LEFT);
            this.jPouzivanaKartaButton.setVerticalAlignment(SwingConstants.TOP);
            this.jPouzivanaKartaButton.setText(karta.toHTMLString());
            this.jPouzivanaKartaButton.setBackground(karta.getFarba());
            this.jPouzivanaKartaButton.setEnabled(true);
        }
    }
    
    private void zamkniPouzivateloveButtony() {
        this.jEndButton.setEnabled(false);
        this.jPouzivatelKarta1Button.setEnabled(false);
        this.jPouzivatelKarta2Button.setEnabled(false);
        this.jPouzivatelKarta3Button.setEnabled(false);
    }
    
    private void odomkniPouzivateloveButtony() {
        this.jEndButton.setEnabled(true);
        this.jPouzivatelKarta1Button.setEnabled(true);
        this.jPouzivatelKarta2Button.setEnabled(true);
        this.jPouzivatelKarta3Button.setEnabled(true);
        
    }
    
    private void nastavPouzivanuKartu(int index) {
        Karta karta = this.level.getPouzivatel().getKartuZRuky(index);
        this.level.setPouzivanaKarta(karta);
    }
    
    private JButton getjPouzivatelKartaButton(int index) {
        switch (index) {
            case 1:
                return this.jPouzivatelKarta1Button;
            case 2:
                return this.jPouzivatelKarta2Button;
            case 3:
                return this.jPouzivatelKarta3Button;
            default:
                return null;
        }
    }
    
    private void vykresliPouzivatela() {
        this.vykresliPouzivatelovBalik();
        this.vykresliKartuPouzivatela(1);
        this.vykresliKartuPouzivatela(2);
        this.vykresliKartuPouzivatela(3);
        this.vykresliPouzivatelovZivot();
        this.vykresliPouzivatelovuObranu();
    }
    
    private void vykresliKartuPouzivatela(int index) {
        Karta karta;
        try {
            karta = this.level.getPouzivatel().getKartuZRuky(index);
        } catch (Exception e) {
            karta = null;
        }
        JButton button = this.getjPouzivatelKartaButton(index);
        if (karta != null) {
            button.setHorizontalAlignment(SwingConstants.LEFT);
            button.setText(karta.toHTMLString());
            button.setBackground(karta.getFarba());
            button.setEnabled(true);
        } else {
            button.setHorizontalAlignment(SwingConstants.CENTER);
            button.setText("");
            button.setBackground(Color.DARK_GRAY);
            button.setEnabled(false);
        }
    }
    
    private void vykresliOponenta() {
        this.vykresliOponentovBalik();
        this.jOponentKarta1Button.setEnabled(false);
        this.jOponentKarta2Button.setEnabled(false);
        this.jOponentKarta3Button.setEnabled(false);
        this.vykresliOponentovZivot();
        this.vykresliOponentovuObranu();
    }
    
    private void vykresliPouzivatelovZivot() {
        this.jZivotPouzivatelaLabel.setText("<html><b><font size=7>" + this.level.getPouzivatel().getPocetBodovZivota() + "</font></b></html>");
        if (this.level.getPouzivatel().maPlnyPocetBodovZivota()) {
            this.jZivotPouzivatelaLabel.setForeground(Color.WHITE);
        } else {
            this.jZivotPouzivatelaLabel.setForeground(Color.BLACK);
        }
    }
    
    private void vykresliPouzivatelovuObranu() {
        this.jObranaPouzivatelaLabel.setText("<html><b><font size=7>" + this.level.getPouzivatel().getPocetbodovObrany()+ "</font></b></html>");
    }
    
    private void vykresliOponentovuObranu() {
        this.jObranaOponentaLabel.setText("<html><b><font size=7>" + this.level.getOponent().getPocetbodovObrany()+ "</font></b></html>");
    }
    
    private void vykresliOponentovZivot() {
        this.jZivotOponentaLabel.setText("<html><b><font size=7>" + this.level.getOponent().getPocetBodovZivota() + "</font></b></html>");
        if (this.level.getOponent().maPlnyPocetBodovZivota()) {
            this.jZivotOponentaLabel.setForeground(Color.WHITE);
        } else {
            this.jZivotOponentaLabel.setForeground(Color.BLACK);
        }
    }
    
    private void vykresliPouzivatelovBalik() {
        this.jPouzivatelBalicekLabel.setText("<html><font size=10>" + this.level.getPouzivatel().getAktualnaVelkostBalika() + "/" + this.level.getPouzivatel().getUplnaVelkostBalika() + "</font></html>");
    }
    
    private void vykresliOponentovBalik() {
        this.jOponentBalicekLabel.setText("<html><font size=10>" + this.level.getOponent().getAktualnaVelkostBalika() + "/" + this.level.getOponent().getUplnaVelkostBalika() + "</font></html>");
    }
    // </editor-fold>
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Okno.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Okno.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Okno.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Okno.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                (Okno.okno = new Okno()).setVisible(true);
                Hra hra = new Hra();
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jEndButton;
    private javax.swing.JLabel jObranaOponentaLabel;
    private javax.swing.JLabel jObranaPouzivatelaLabel;
    private javax.swing.JLabel jOponentBalicekLabel;
    private javax.swing.JButton jOponentKarta1Button;
    private javax.swing.JButton jOponentKarta2Button;
    private javax.swing.JButton jOponentKarta3Button;
    private javax.swing.JButton jPouzivanaKartaButton;
    private javax.swing.JLabel jPouzivatelBalicekLabel;
    private javax.swing.JButton jPouzivatelKarta1Button;
    private javax.swing.JButton jPouzivatelKarta2Button;
    private javax.swing.JButton jPouzivatelKarta3Button;
    private javax.swing.JLabel jZivotOponentaLabel;
    private javax.swing.JLabel jZivotPouzivatelaLabel;
    // End of variables declaration//GEN-END:variables
}
